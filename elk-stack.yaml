---
namespace: elk

elasticsearch:
  defines: runnable
  services:
    elasticsearch:
      container: elasticsearch
      port: <- $port
      protocol: tcp
    elasticsearch-internal:
      container: elasticsearch
      port: <- $internal-port
      protocol: tcp
  metadata:
    name: Elasticsearch
    description: |
      Elasticsearch is an open-source, distributed, RESTful search and analytics engine.

      It is built on top of the Apache Lucene library and is designed for high-speed searching, indexing, and analysis of large volumes of data in real-time.

      Elasticsearch is part of the Elastic Stack, which also includes Logstash for data collection and processing, and Kibana for data visualization and management.
    tags: visualization, logging, self hosted, cluster, monitoring, data processing pipeline
    website: https://www.elastic.co/
    source: https://github.com/elastic/elasticsearch
    publisher: monk.io
    icon: https://images.contentstack.io/v3/assets/bltefdd0b53724fa2ce/blt549f7d977c2a88f4/5d082d34616162aa5a85707d/logo-enterprise-search-32-color.svg
    private: true
  containers:
    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch
      image-tag: <- $elasticsearch-image
      user: '1000'
      paths:
        - <- `${monk-volume-path}/elasticsearch/data:/usr/share/elasticsearch/data`
  files:
    elasticsearch-config:
      container: elasticsearch
      mode: 0644
      path: /usr/share/elasticsearch/config/elasticsearch.yml
      contents: <<< files/elasticsearch.yml
  variables:
    elasticsearch-image:
      value: <- $elasticsearch-image-tag default("8.15.3")
      type: string
    jvm-opts:
      env: ES_JAVA_OPTS
      value: <- $elasticsearch-jvm-options default("-Xmx256m -Xms256m")
      type: string
    port:
      value: <- $elasticsearch-http-port default(9200)
      type: int
    internal-port:
      value: <- $elasticsearch-internal-port default(9300)
      type: int
    discovery-type:
      env: discovery.type
      value: single-node
      type: string

kibana:
  defines: runnable
  services:
    kibana-http:
      container: kibana
      port: <- $port
      protocol: tcp
  connections:
    elasticsearch:
      runnable: elk/elasticsearch
      service: elasticsearch
  metadata:
    private: true
    name: Kibana
    description: |
      Kibana is an open-source data visualization and exploration tool that is part of the Elastic Stack, which also includes Elasticsearch for search and analytics, and Logstash for data collection and processing.

      Kibana provides a web-based interface for visualizing, analyzing, and managing data stored in Elasticsearch, making it a powerful tool for exploring and understanding large volumes of data.

      Kibana allows users to create a wide range of visualizations, dashboards, and reports to gain insights from data. Some key features of Kibana include:
    tags: self hosted, visualization, monitoring
    website: https://www.elastic.co/kibana/
    source: https://github.com/elastic/kibana
    publisher: monk.io
    icon: https://www.vectorlogo.zone/logos/elasticco_kibana/elasticco_kibana-ar21.png
  containers:
    kibana:
      image: docker.elastic.co/kibana/kibana
      image-tag: <- $kibana-image
      user: '1000'
      environment:
        - <- `ELASTICSEARCH_HOSTS=http://${elasticsearch-hosts}:${elasticsearch-port}`
      paths:
        - <- `${monk-volume-path}/kibana/data:/usr/share/kibana/data`
  depends:
    wait-for:
      runnables:
        - elk/elasticsearch
  files:
    kibana-config:
      container: kibana
      mode: 0644
      path: /usr/share/kibana/config/kibana.yml
      contents: <<< files/kibana.yml
  variables:
    kibana-image:
      value: <- $kibana-image-tag default("8.15.3")
      type: string
    elasticsearch-hosts:
      type: string
      value: <- connection-hostname("elasticsearch")
    port:
      type: int
      value: <- $kibana-http-port default(5601)
    elasticsearch-port:
      type: int
      value: <- $elasticsearch-http-port default(9200)

logstash:
  defines: runnable
  services:
    logstash-5044:
      container: logstash
      port: 5044
      protocol: tcp
    logstash-50000:
      container: logstash
      port: 50000
      protocol: tcp
    logstash-9600:
      container: logstash
      port: 9600
      protocol: tcp
  connections:
    elasticsearch:
      runnable: elk/elasticsearch
      service: elasticsearch
  metadata:
    private: true
    name: logstash
    description: |
      Logstash is an open-source data collection and processing tool that is part of the Elastic Stack, which also includes Elasticsearch for search and analytics, and Kibana for data visualization and management.

      Logstash is designed to collect, process, and transform data from various sources, and then send it to Elasticsearch for indexing and analysis.

      Logstash is commonly used for collecting, parsing, and enriching log data, but it can also handle a wide variety of other data types such as metrics, events, and other structured or unstructured data. Some key features of Logstash include:
    tags: self hosted, logging, data processing pipeline
    website: https://www.elastic.co/logstash/
    source: https://www.elastic.co/logstash/
    publisher: monk.io
    icon: https://www.vectorlogo.zone/logos/elasticco_logstash/elasticco_logstash-ar21.png
  containers:
    logstash:
      image: docker.elastic.co/logstash/logstash
      image-tag: <- $logstash-image
      user: root
  depends:
    wait-for:
      runnables:
        - elk/elasticsearch
  files:
    logstash-config:
      container: logstash
      mode: 0644
      path: /usr/share/logstash/config/logstash.yml
      contents: <<< files/logstash.yml
    logstash-pipeline:
      container: logstash
      mode: 0644
      path: /usr/share/logstash/pipeline/logstash.conf
      contents: <<< files/pipeline/logstash.conf
  variables:
    logstash-image:
      value: <- $logstash-image-tag default("8.15.3")
      type: string
    elasticsearch-hosts:
      type: string
      value: <- connection-hostname("elasticsearch")
    elasticsearch-port:
      type: int
      value: <- $elasticsearch-http-port default(9200)
    jvm-opts:
      env: LS_JAVA_OPTS
      value: <- $logstash-jvm-options default("-Xmx256m -Xms256m")
      type: string
    monitoring-elasticsearch-hosts:
      env: monitoring.elasticsearch.hosts
      value: <- "http://" connection-hostname("elasticsearch") ":" $elasticsearch-port concat-all
      type: string

nginx:
  defines: runnable
  metadata:
    private: true
    name: nginx
    description: |
      Nginx (pronounced "engine-x") is a popular open-source web server and reverse proxy server software.
      It is known for its high-performance, scalability, and reliability, making it a widely used solution for serving static and dynamic web content.
    tags: webserver, ssl, logging, loadbalancer, self hosted, reverse proxy, http server
    website: https://nginx.org/en/
    source: https://github.com/nginx
    publisher: monk.io
    icon: https://assets.monk.io/icons/nginx-logo-FF65602A76-seeklogo.com.png
  services:
    nginx:
      container: nginx-reverse-proxy
      port: <- $listen-port
      protocol: tcp
      host-port: <- $listen-port
  connections:
    kibana:
      runnable: elk/kibana
      service: kibana-http
  files:
    server-def:
      contents: |
        server {
          listen 0.0.0.0:{{ v "listen-port" }};
          location / {
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_pass http://{{ v "proxy-target-host" }}:{{ v "proxy-target-port" }};
          }
        }
      mode: 0644
      path: /opt/bitnami/nginx/conf/server_blocks/reverse_proxy.conf
      container: nginx-reverse-proxy
  containers:
    nginx-reverse-proxy:
      image: docker.io/bitnami/nginx
      image-tag: <- $nginx-image
      cap-add:
        - CAP_NET_BIND_SERVICE
  depends:
    wait-for:
      runnables:
        - elk/kibana
      timeout: 30
  variables:
    proxy-target-host:
      value: <- connection-hostname("kibana")
      type: string
    listen-port:
      value: <- $nginx-listen-port default(80)
      type: int
    proxy-target-port:
      value: <- $kibana-http-port default(5601)
      type: int
    nginx-image:
      value: <- $nginx-image-tag default("latest")
      type: string
